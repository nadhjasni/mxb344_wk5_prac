sum(summary.lead.long$mean * c(L, -L))
summary(lead.res)
summary(lead.res1)
wl <- read.table("F:/Final Sem/MXB343/Datasets/weightloss.dat")
colnames(wl) <- c("id","w0","w3","w6","w9","prog")
interaction.plot(wl.long$time, wl.long$trt, wl.long$y)
with(wl.long, {
interaction.plot(time, trt, y, fixed = TRUE)
time <- ordered(time)
interaction.plot(time, trt, y, fixed = TRUE, col = 2:3, leg.bty = "o")
interaction.plot(time, trt, y, fixed = TRUE, col = 2:3, type = "p")
})
wl.long <- reshape(data      = wl,
varying   = c("w0","w3","w6","w9"),
timevar   = "time",
idvar     = "id",
direction = "long",
sep       = ""
)
wl.long <- wl.long[with(wl.long, order(id, time)),]
wl.long <- within(wl.long, {
time <- factor(time)
prog <- factor(prog, 1:2, c("prog1","prog2"))
})
View(wl)
View(wl.long)
interaction.plot(wl.long$time, wl.long$trt, wl.long$y)
wl.long
wl.long$time
wl.long$y
y <- as.numeric(wl.long[,4])
interaction.plot(wl.long$time, wl.long$trt, wl.long$y)
y
length(y)
length(time)
wl <- read.table("F:/Final Sem/MXB343/Datasets/weightloss.dat")
colnames(wl) <- c("id","w0","w3","w6","w9","prog")
wl.long <- reshape(data      = wl,
varying   = c("w0","w3","w6","w9"),
timevar   = "time",
idvar     = "id",
direction = "long",
sep       = ""
)
wl.long <- wl.long[with(wl.long, order(id, time)),]
wl.long <- within(wl.long, {
time <- factor(time)
prog <- factor(prog, 1:2, c("prog1","prog2"))
})
View(wl.long)
interaction.plot(wl.long$time, wl.long$trt, wl.long$w)
wl$time <- wl.long[,3]
interaction.plot(wl.long$time, wl.long$prog, wl.long$w)
with(wl.long, {
interaction.plot(time, prog, w, fixed = TRUE)
time <- ordered(time)
interaction.plot(time, prog, w, fixed = TRUE, col = 2:3, leg.bty = "o")
interaction.plot(time, prog, w, fixed = TRUE, col = 2:3, type = "p")
})
with(wl.long, {
interaction.plot(time, prog, w, fixed = TRUE)
time <- ordered(time)
interaction.plot(time, prog, w, fixed = TRUE, col = (2,4), leg.bty = "o")
interaction.plot(time, prog, w, fixed = TRUE, col = (2,4), type = "p")
})
boxplot(y~time + trt)
boxplot(w~time + prog)
wl.long$w <- wl.long[,4]
boxplot(w~time + prog)
w <- wl.long[,4]
boxplot(w~time + prog)
interaction.plot(wl.long$time, wl.long$prog, wl.long$w, col = c(2,4))
interaction.plot(wl.long$time, wl.long$prog, wl.long$w, col = c(2,9))
interaction.plot(wl.long$time, wl.long$prog, wl.long$w, col = c(2,7))
interaction.plot(wl.long$time, wl.long$prog, wl.long$w, col = c(2,6))
interaction.plot(wl.long$time, wl.long$prog, wl.long$w, col = c(2,3))
interaction.plot(wl.long$time, wl.long$prog, wl.long$w, col = c(2,8))
interaction.plot(wl.long$time, wl.long$prog, wl.long$w, col = c(2,5))
interaction.plot(wl.long$time, wl.long$prog, wl.long$w, col = c(2,3))
prog <- wl.long[,2]
time <- wl.long[,3]
boxplot(w~time + prog)
install.packages("Rcmdr")
library(Rcmdr)
library(lattice)
xyplot(w~time + prog , groups = id,type="b",data = wl.long)
wl.res<-gls(y~time+trt,data=wl.long,correlation=corSymm(form=~1|id), weight=varIdent(form=~1|time), method="REML")
wl.res<-gls(w~time+prog,data=wl.long,correlation=corSymm(form=~1|id), weight=varIdent(form=~1|time), method="REML")
summary(wl.res)
xyplot(wl.res, groups = id,type="b",data = wl.long)
plot(wl.res)
plot(wl.res)
gls$coefficient
wl.res$coefficient
lm0 <- lm(w~time+prog,data=wl.long)
summary(wl.long)
lm0 <- aov(w~time+prog,data=wl.long)
lm0 <- lm(w~time+prog,data=wl.long)
summary(lm0)
lm0$coefficients
lm0 <- lm(w~time*prog,data=wl.long)
summary(lm0)
lm0$coefficients
wl.res2 <- gls(y~time*trt,data=wl.long, correlation=corCompSymm(form=~1|id), method="REML")
wl.res2 <- gls(w~time*trt,data=wl.long, correlation=corCompSymm(form=~1|id), method="REML")
wl.res2 <- gls(w~time*prog,data=wl.long, correlation=corCompSymm(form=~1|id), method="REML")
summary(wl.res2)
wl.res<-gls(w~time+prog,data=wl.long,correlation=corSymm(form=~1|id), weight=varIdent(form=~1|time), method="REML")
summary(wl.res)
wl.res<-gls(w~time*prog,data=wl.long,correlation=corSymm(form=~1|id), weight=varIdent(form=~1|time), method="REML")
summary(wl.res)
wl.res2 <- gls(w~time*prog,data=wl.long, correlation=corCompSymm(form=~1|id), method="REML")
summary(wl.res2)
plot(wl.res2)
boxplot(wl.res2)
anova(wl.res,wl.res2)
wl.res0 <- gls(y~time+trt,data=wl.long,method="REML")
wl.res0 <- gls(w~time+prog,data=wl.long,method="REML")
summary(wl.res0)
wl.res0 <- gls(w~time*prog,data=wl.long,method="REML")
summary(wl.res0)
anova(wl.res0,wl.res)
wl.long$pred<-predict(lme1)
gls.cs<-gls(y~trt*time,corr=corCompSymm(form=~1|id),method="REML",data=wl.long)
gls.cs<-gls(w~prog*time,corr=corCompSymm(form=~1|id),method="REML",data=wl.long)
lme1 <- lme(w ~ prog * time,random = ~ 1|id, data=wl.long)
summary(lme1)
anova(lme1,lme0)
lme0 <- lme(w ~ prog*time,random = ~ time|id, data=wl.long)
summary(lme0)
## random intercept model  (CS)
gls.cs<-gls(w~prog*time,corr=corCompSymm(form=~1|id),method="REML",data=wl.long)
lme1 <- lme(w ~ prog * time,random = ~ 1|id, data=wl.long)
summary(lme1)
anova(lme1,lme0)
wl.long$pred<-predict(lme1)
wl.long$pred
head(wl.long)
interaction(pred~time)
interaction(w~time)
wl.long$pred<-predict(lme0)
head(wl.long)
summary(lme0)$coe$rand
weights%%wl.long
weights%*%wl.long
weights%*%wl
lme0 <- lme(w ~ prog*time,random = ~ time|id, data=wl.long)
summary(lme0)
## random intercept model  (CS)
gls.cs<-gls(w~prog*time,corr=corCompSymm(form=~1|id),method="REML",data=wl.long)
lme1 <- lme(w ~ prog * time,random = ~ 1|id, data=wl.long)
summary(lme1)
anova(lme1,lme0)
wl.res<-gls(w~time*prog,data=wl.long,correlation=corSymm(form=~1|id), weight=varIdent(form=~1|time), method="REML")
summary(wl.res)
summary(wl.res2)
xyplot(w~time + prog , groups = id,type="b",data = wl.long)
lme0 <- lme(w ~ prog*time,random = ~ time|id, data=wl.long)
summary(lme0)
newdat$predicted <- predict(res.gls, newdata = newdat, type = "response")
print(newdat, digits = 4, row.names = F)
newdat$predicted <- predict(lead.res, newdata = newdat, type = "response")
newdat$predicted <- predict(wl.res, newdata = newdat, type = "response")
newdat$predicted <- predict(wl.res, newdata = wl.long, type = "response")
newwl.long$predicted <- predict(wl.res, newdata = wl.long, type = "response")
newdat <- expand.grid(time = c("0","3","6","9"),
prog       = c("prog1","prog2"))
newdat$predicted <- predict(lead.res, newdata = newdat, type = "response")
print(newdat, digits = 4, row.names = F)
newdat$predicted <- predict(res.gls, newdata = newdat, type = "response")
print(newdat, digits = 4, row.names = F)
newdat$predicted <- predict(wl.res, newdata = newdat, type = "response")
print(newdat, digits = 4, row.names = F)
wl.long$pred<-predict(lme0)
head(wl.long)
plot(wl.long)
summary(newdat)
tapply(w,time,mean)
tapply(w,prog,mean)
interaction.plot(newdat$time, newdat$prog, newdat$w, col = c(2,3))
plot(w$prog, log(jitter(w$newdat)))
plot(w.long$prog, log(jitter(w.long$newdat)))
plot(wl.long$prog, log(jitter(wl.long$newdat)))
plot(wl.long$prog,wl.long$pred)
plot(wl.long$prog,wl.long$pred)
interaction.plot(wl.long$prog,wl.long$pred)
gls.cs<-gls(w~prog*time,corr=corCompSymm(form=~1|id),method="REML",data=wl.long)
lme1 <- lme(w ~ prog * time,random = ~ 1|id, data=wl.long)
summary(lme1)
anova(lme1,lme0)
anova(lme1,lm0)
lm1 <- lm(w ~ prog * time,random = ~ 1|id, data=wl.long)
summary(lm1)
anova(lm1,lm0)
gls.cs<-gls(w~prog*time,corr=corCompSymm(form=~1|id),method="REML",data=wl.long)
summary(gls.cs)
anova(wl.res,gls.cs)
wl.res3<-gls(w~prog+prog,corr=corSymm(form=~1|id),method="REML",data=wl.long)
summary(wl.res3)
wl.res3<-gls(w~time+prog,corr=corSymm(form=~1|id),method="REML",data=wl.long)
summary(wl.res3)
anova(wl.res,wl.res3)
summary(wl.res)
newdat1 <- expand.grid(time = c("0","3","6","9"),
prog = c("prog1","prog2"))
newdat1$predicted <- predict(wl.res3, newdata = newdat, type = "response")
print(newdat, digits = 4, row.names = F)
lm2 <- lm(w~time+prog,data=wl.long)
summary(lm2)
lme2 <- lme(y ~ prog + time,random = ~ time|id, method="REML", data=wl.long)
lme2 <- lme(w ~ prog + time,random = ~ time|id, method="REML", data=wl.long)
wl.long$pred<-predict(lme2)
head(wl.long)
wl.long$pred<-predict(lme1)
summary(wl.long)
head(wl.long)
lme2 <- lme(w ~ prog + time,random = ~ time|id, method="REML", data=wl.long)
wl.long$pred<-predict(lme2)
head(wl.long)
plot(newdat1)
plot(newdat1$predicted,newdat1$prog)
help(weights)
weights(lead)
lead.res1 <- gls(y~time,data=lead.long,correlation=corSymm(form=~1|id), weight=varIdent(form=~1|time),method="REML")
lead <- read.table("F:/Final Sem/MXB343/Datasets/Lead2.dat")
colnames(lead) <- c("id", "y0","y7", "y28","y42")
is.na(lead) <- lead=="."
head(lead)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(lead,2,pMiss)
apply(lead,1,pMiss)
library(mice)
md.pattern(lead)
tempData <- mice(lead,m=5,maxit=50,meth='pmm',seed=500)
summary(tempData)
lead.c <- complete(tempData,1)
View(lead.c)
lead.long <- reshape(data      = lead.c,
varying   = c("y0","y7","y28","y42"),
timevar   = "time",
idvar     = "id",
direction = "long",
sep       = ""
)
lead.long <- lead.long[with(lead.long, order(id, time)),]
lead.long <- within(lead.long, {
time <- factor(time)
y    <- as.numeric(y)
})
y <- as.numeric(lead.long[,3])
time <- as.factor(lead.long[,2])
id <- as.integer(lead.long[,1])
library(nlme)
lead.res <- gls(y~time, data=lead.long, corr=corCompSymm(form=~1|id), method="REML")
summary(lead.res)
lm0 <- lme(y~time, data=lead.long, random = ~1|id)
intervals(lm0)
summary(lm0)
lead.res1 <- gls(y~time,data=lead.long,correlation=corSymm(form=~1|id), weight=varIdent(form=~1|time),method="REML")
summary(lead.res1)
vecsigma <- c(1,coef(lead.res1$modelStruct$varStruct, unconstrained=FALSE))*lead.res1$sigma
Correlation matrix
Matrho <- matrix(0,nrow=4,ncol=4)
Matrho[lower.tri(Matrho, diag = FALSE)] <- coef(lead.res1$modelStruct$corStruct,unconstrained=FALSE)
Matrho <- Matrho+t(Matrho)
diag(Matrho) <- 1
Covariance matrix
vecsigma <- c(1,coef(lead.res1$modelStruct$varStruct, unconstrained=FALSE))*lead.res1$sigma
Sigma <- vecsigma%*%t(vecsigma)*Matrho
lead.res1 <- gls(y~time,data=lead.long,correlation=corSymm(form=~1|id) weight=varIdent(form=~1|time),method="REML")
summary(lead.res1)
vecsigma <- c(1,coef(lead.res1$modelStruct$varStruct, unconstrained=FALSE))*lead.res1$sigma
Correlation matrix
Matrho <- matrix(0,nrow=4,ncol=4)
Matrho[lower.tri(Matrho, diag = FALSE)] <- coef(lead.res1$modelStruct$corStruct,unconstrained=FALSE)
Matrho <- Matrho+t(Matrho)
diag(Matrho) <- 1
Covariance matrix
vecsigma <- c(1,coef(lead.res1$modelStruct$varStruct, unconstrained=FALSE))*lead.res1$sigma
Sigma <- vecsigma%*%t(vecsigma)*Matrho
Matrho <- matrix(0,nrow=4,ncol=4)
Matrho[lower.tri(Matrho, diag = FALSE)] <- coef(lead.res1$modelStruct$corStruct,unconstrained=FALSE)
Matrho <- Matrho+t(Matrho)
diag(Matrho) <- 1
lead.res1 <- gls(y~time,data=lead.long,correlation=corSymm(form=~1|id) weight=varIdent(form=~1|time),method="REML")
summary(lead.res1)
vecsigma <- c(1,coef(lead.res1$modelStruct$varStruct, unconstrained=FALSE))*lead.res1$sigma
Matrho <- matrix(0,nrow=4,ncol=4)
Matrho[lower.tri(Matrho, diag = FALSE)] <- coef(lead.res1$modelStruct$corStruct,unconstrained=FALSE)
Matrho <- Matrho+t(Matrho)
diag(Matrho) <- 1
vecsigma <- c(1,coef(lead.res1$modelStruct$varStruct, unconstrained=FALSE))*lead.res1$sigma
Sigma <- vecsigma%*%t(vecsigma)*Matrho
summary(lead.res1)
lead.long$time<-relevel(factor(lead.long$time), ref="42")
lm1 <- lme(y~time, data=lead.long, random = ~1|id)
summary(lm1)
Regression model
X = 1,if lead measurements were taken at day 42
X = 0, otherwise
$$\Y = \beta_1 + \beta_2*\time_0 + \beta_2*\time_7 + \beta_2*\time_28
If lead measurements were taken at day 42; $$ X = time_j = 1  $$
Otherwise; $$ X = time_j = 0  $$
$$ Y = \beta_0 + \beta_1*time_0 + \beta_2*time_7 + \beta_3*time_{28} $$
Measurements taken at day 0;
$$ Y_0 = 21.702857  + 5.347143*1 + \beta_2*0 + \beta_3*0 = 27.05 $$
Measurements taken at day 7;
$$ Y_7 = 21.702857  + \beta_1*0  -8.311429*1 + \beta_3*0 =  13.39143 $$
Measurements taken at day 28;
$$ Y_{28} = 21.702857  + \beta_1*0 + \beta_2*0  -6.405714*1 = 15.29714 $$
lead.long$time<-relevel(factor(lead.long$time), ref="0")
estimate
contrasts(time,4)
GetAucmbContrast <- function(t) {
n <- length(t)
first <- t[1] + t[2] - 2*t[n]
last  <- t[n] - t[n-1]
middle <- sapply(seq_len(n-2),
FUN = function(i) {
t[i+2] - t[i]
})
1/2 * c(first, middle, last)
}
L <- GetAucmbContrast(c(0,1,2,3))
L
library(plyr)
summary.lead.long <- ddply(.data = lead.long,
.variables = c("time"),
.fun = summarize,
n = length(!is.na(y)),
mean = mean(y),
sd = sd(y))
summary.lead.long
res.aucmb <- ddply(.data = summary.lead.long,
.variables = c("time"),
.fun = function(DF) {
data.frame(AUCMB = sum(DF$mean * L))
})
res.aucmb
sum(summary.lead.long$mean * c(L, -L))
lm
y <- lead.c[,2:5]
lead.c$y0 <- as.numeric(as.character(lead.c[,2]))
lead.c$y7 <- as.numeric(as.character(lead.c[,3]))
lead.c$y28 <- as.numeric(as.character(lead.c[,4]))
lead.c$y42<- as.numeric(as.character(lead.c[,5]))
lead.c$D7  = lead.c$y7-lead.c$y0
lead.c$D28 = lead.c$y28-lead.c$y0
lead.c$D42 = lead.c$y42-lead.c$y0
head(lead.c)
colMeans(lead.c[,6:8])
lead.res2 <- lm(y~time, data=lead.long)
summary(lead.res2)
D7 <- lead.c[,6]
t.test(D7)
D28 <- lead.c[,7]
t.test(D28)
D42 <- lead.c[,8]
t.test(D42)
wl <- read.table("F:/Final Sem/MXB343/Datasets/weightloss.dat")
colnames(wl) <- c("id","w0","w3","w6","w9","prog")
wl.long <- reshape(data      = wl,
varying   = c("w0","w3","w6","w9"),
timevar   = "time",
idvar     = "id",
direction = "long",
sep       = ""
)
wl.long <- wl.long[with(wl.long, order(id, time)),]
wl.long <- within(wl.long, {
time <- factor(time)
prog <- factor(prog, 1:2, c("prog1","prog2"))
})
interaction.plot(wl.long$time, wl.long$prog, wl.long$w, col = c(2,3))
w <- wl.long[,4]
prog <- wl.long[,2]
time <- wl.long[,3]
boxplot(w~time + prog)
wl.res<-gls(w~time*prog,data=wl.long,correlation=corSymm(form=~1|id), weight=varIdent(form=~1|time), method="REML")
summary(wl.res)
library(lattice)
xyplot(w~time + prog , groups = id,type="b",data = wl.long)
plot(wl.res)
lm0 <- lm(w~time*prog,data=wl.long)
summary(lm0)
lm0$coefficients
wl.res2 <- gls(w~time*prog,data=wl.long, correlation=corCompSymm(form=~1|id), method="REML")
summary(wl.res2)
plot(wl.res2)
anova(wl.res,wl.res2)
wl.res<-gls(w~time*prog,data=wl.long,correlation=corSymm(form=~1|id), weight=varIdent(form=~1|time), method="REML")
summary(wl.res)
newdat <- expand.grid(time = c("0","3","6","9"),
prog = c("prog1","prog2"))
newdat$predicted <- predict(wl.res, newdata = newdat, type = "response")
print(newdat, digits = 4, row.names = F)
wl.res3<-gls(w~time+prog,corr=corSymm(form=~1|id),method="REML",data=wl.long)
summary(wl.res3)
anova(wl.res,wl.res3)
lme2 <- lme(w ~ prog + time,random = ~ time|id, method="REML", data=wl.long)
wl.long$pred<-predict(lme2)
head(wl.long)
newdat1 <- expand.grid(time = c("0","3","6","9"),
prog = c("prog1","prog2"))
newdat1$predicted <- predict(wl.res3, newdata = newdat, type = "response")
print(newdat, digits = 4, row.names = F)
plot(newdat1$predicted,newdat1$prog)
lead.res1 <- gls(y~time,data=lead.long,correlation=corSymm(form=~1|id), weight=varIdent(form=~1|time),method="REML")
summary(lead.res1)
vecsigma <- c(1,coef(lead.res1$modelStruct$varStruct, unconstrained=FALSE))*lead.res1$sigma
Matrho <- matrix(0,nrow=4,ncol=4)
Matrho[lower.tri(Matrho, diag = FALSE)] <- coef(lead.res1$modelStruct$corStruct,unconstrained=FALSE)
Matrho <- Matrho+t(Matrho)
diag(Matrho) <- 1
vecsigma <- c(1,coef(lead.res1$modelStruct$varStruct, unconstrained=FALSE))*lead.res1$sigma
Sigma <- vecsigma%*%t(vecsigma)*Matrho
lead.res1 <- gls(y~time,data=lead.long,correlation=corSymm(form=~1|id), weight=varIdent(form=~1|time),method="REML")
summary(lead.res1)
vecsigma <- c(1,coef(lead.res1$modelStruct$varStruct, unconstrained=FALSE))*lead.res1$sigma
Matrho <- matrix(0,nrow=4,ncol=4)
Matrho[lower.tri(Matrho, diag = FALSE)] <- coef(lead.res1$modelStruct$corStruct,unconstrained=FALSE)
Matrho <- Matrho+t(Matrho)
diag(Matrho) <- 1
vecsigma <- c(1,coef(lead.res1$modelStruct$varStruct, unconstrained=FALSE))*lead.res1$sigma
Sigma <- vecsigma%*%t(vecsigma)*Matrho
library("dplyr", lib.loc="~/R/win-library/3.3")
library("tidyr", lib.loc="~/R/win-library/3.3")
library("ggplot2", lib.loc="~/R/win-library/3.3")
library("rmarkdown", lib.loc="~/R/win-library/3.3")
install.packages("ROCR")
install.packages("readr")
library("rmarkdown", lib.loc="~/R/win-library/3.3")
install.packages("caret")
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
library(rmarkdown)
library(caret)
library(ROCR)
train <- read_csv("../input/train.csv")
test  <- read_csv("../input/test.csv")
setwd("~/GitHub/mxb344_wk5_prac")
train <- read_csv("../input/train.csv")
test  <- read_csv("../input/test.csv")
train <- read_csv("~/GitHub/mxb344_wk5_prac/input/train.csv")
test  <- read_csv("~/GitHub/mxb344_wk5_prac/input/test.csv")
train <- read_csv("~/GitHub/mxb344_wk5_prac/input/train.csv")
test  <- read_csv("~/GitHub/mxb344_wk5_prac/input/test.csv")
train <- read_csv("../input/train.csv")
test  <- read_csv("../input/test.csv")
setwd("~/GitHub/mxb344_wk5_prac")
train <- read_csv(""~/GitHub/mxb344_wk5_prac/train.csv")
test  <- read_csv(""~/GitHub/mxb344_wk5_prac/test.csv")
train <- read_csv(""~GitHub/mxb344_wk5_prac/train.csv")
test  <- read_csv(""~GitHub/mxb344_wk5_prac/test.csv")
train <- read_csv("~GitHub/mxb344_wk5_prac/train.csv")
test  <- read_csv("~GitHub/mxb344_wk5_prac/test.csv")
train <- read_csv("GitHub/mxb344_wk5_prac/train.csv")
test  <- read_csv("GitHub/mxb344_wk5_prac/test.csv")
train <- read.csv("../input/test.csv")
train <- read.csv("~/GitHub/mxb344_wk5_prac/input/test.csv")
train <- read.csv("~/GitHub/mxb344_wk5_prac/test.csv")
test <- read.csv("~/GitHub/mxb344_wk5_prac/test.csv")
train <- read.csv("~/GitHub/mxb344_wk5_prac/train.csv")
View(test)
View(train)
full <- bind_rows(train,test)
str(full)
View(full)
ggplot(data=explanatory_set) + geom_bar(aes(x=pclass, fill=factor(survived)),position="dodge")
ggplot(data=full) + geom_bar(aes(x=pclass, fill=factor(survived)),position="dodge")
ggplot(data=full) + geom_bar(aes(x=Pclass, fill=factor(survived)),position="dodge")
ggplot(data=full) + geom_bar(aes(x=Pclass, fill=factor(Survived)),position="dodge")
ggplot(data=full) + geom_bar(aes(x=Sex, fill=factor(Survived)),position="dodge")
ggplot(data=train) + geom_bar(aes(x=Sex, fill=factor(Survived)),position="dodge")
rm(full)
ggplot(data=train) + geom_bar(aes(x=Pclass, fill=factor(Survived)),position="dodge")
table(as.factor(train$Survived),as.factor(train$Embarked))
View(test)
caret::createDataPartition()
caret::createDataPartition(test)
caret::createDataPartition(train)
train_split <- caret::createDataPartition(
y=train$Survived,p=0.6,list=F)
train_split
train_set <- train[train_split,]
train_set
val_set <- train[-train_split,]
val_set
train_split <- caret::createDataPartition(
y=train$Survived,p=0.6,list=F)
View(train)
train_set <- train[train_split,]
train_set
val_set <- train[-train_split,]
View(val_set)
View(train_set)
surv <- glm( formula = survival ~ pclass + gender, family= binomial(link = "log"),data=train)
surv <- glm( formula = Survival ~ Pclass + gender, family= binomial(link = "log"),data=train)
train$Survived
surv <- glm( formula = Survived ~ Pclass + gender, family= binomial(link = "log"),data=train)
surv <- glm( formula = Survived ~ Pclass + Sex, family= binomial(link = "log"),data=train)
surv <- glm( formula = Survived ~ Pclass + Sex, family= binomial(link = "logit"),data=train)
surv <- glm( formula = Survived ~ Pclass + Sex, family= binomial(link = "log"),data=train)
surv <- glm( formula = Survived ~ Pclass + Sex, family= binomial(link = "logit"),data=train_set)
summary(surv)
plot(surv)
caret::confusionMatrix(data = train_preds, reference = train_set$Survived)
train_preds <- predicts(surv, type = "response")
train_preds[train_preds > 0.5] <- 1
train_preds[train_preds <=0.5] <- 0
